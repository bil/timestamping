#!/bin/bash

# unpack a timestamps.json file into its individual components, generally in preparation for verification
# unpacks files into working directory

set -e
set -u

FILE_TS=$(<"$1")

HASH_DIGEST=$(jq -r '.hash.digest' < <(printf '%s' "$FILE_TS"))
HASH_ALG=$(jq -r '.hash.algorithm' < <(printf '%s' "$FILE_TS"))
FILE_HASH_NAME=$(jq -r '.hashfile.filename' < <(printf '%s' "$FILE_TS"))
FILE_HASH_DATA=$(jq -r '.hashfile.contents' < <(printf '%s' "$FILE_TS"))

if [ -n $HASH_DIGEST ]; then
    printf '%s' "$HASH_DIGEST" > $(printf '%s' "$HASH_ALG" | tr '[:upper:]' '[:lower:]').digest
fi

if [ -n "$FILE_HASH_NAME" ]; then
    base64 -d < <(printf $FILE_HASH_DATA) > $FILE_HASH_NAME
fi

NUM_TS=$(jq '.timestamps | length' < <(printf '%s' "$FILE_TS"))

for TS_IDX in $(seq 0 $(($NUM_TS - 1)) ); do
    TSA=$(jq -r ".timestamps[$TS_IDX].authority" < <(printf '%s' "$FILE_TS"))
    TSR=$(jq -r ".timestamps[$TS_IDX].reply" < <(printf '%s' "$FILE_TS"))

    CRL_LEN=$(jq -r ".timestamps[$TS_IDX].crls | length" < <(printf '%s' "$FILE_TS"))
    for CRL_IDX in $(seq 0 $(($CRL_LEN -1)) ); do
        base64 -d < <(jq -r ".timestamps[$TS_IDX].crls[$CRL_IDX]" < <(printf '%s' "$FILE_TS")) > tsCRL_$TSA$CRL_IDX.crl
    done

    base64 -d < <(printf '%s' "$TSR") > tsReply_$TSA.tsr
done
