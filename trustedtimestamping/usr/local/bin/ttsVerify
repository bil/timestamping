#!/bin/bash

set -u

PATH_ABS=$(realpath $1)
NAME_DATA=$(basename $PATH_ABS)
DIR_DATA=$(dirname $PATH_ABS)
DIR_ORIGIN=$(pwd)


DIR_LOCAL_BIN=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
source $DIR_LOCAL_BIN/../../../etc/trustedts/tts.source

DIR_ORIGIN=$(pwd)
DIGEST_SIZE=256

# check for Mac
if [ "$(uname)" = "Darwin" ]; then
    CMD_SHA="shasum -a $DIGEST_SIZE"
else
    CMD_SHA="sha${DIGEST_SIZE}sum"
fi

cd "$DIR_DATA"
if [ -f "$PATH_ABS" ]; then
    DIGEST_FILE=$($CMD_SHA "$NAME_DATA")
elif [ -d "$PATH_ABS" ]; then
    DIGEST_FILE="$(find "$NAME_DATA" -type f -printf '%h\0%d\0%p\n' | sort -t '\0' -n -f | awk -F '\0' '{print $3}' | xargs -n 1 $CMD_SHA)"
else
    printf "Error: Path was not file nor directory\n"
    exit 1
fi

DIGEST_DATA=$(printf "%s\n" "$DIGEST_FILE" | $CMD_SHA | cut -c 1-$(($DIGEST_SIZE/4)) )

cd $DIR_ORIGIN
for TSA_idx in $(seq 0 $((${#TSA_names[@]}-1)) ); do

  printf 'Verifying %s:\n' "${TSA_names[$TSA_idx]}"

  # make tmp directory for this tsr
  DIR_TMP=$(mktemp -d /tmp/tsVerify.XXXXXXX)
  cd $DIR_TMP

  # extract certificates from timestamp
  $DIR_BIN/ttsRepCert $DIR_ORIGIN/tsReply_${TSA_names[$TSA_idx]}.tsr
  # split cert chain pem into individual certificates
  csplit -s -f tsReply_${TSA_names[$TSA_idx]} -b %02d.pem tsReply_${TSA_names[$TSA_idx]}.pem /END\ CERTIFICATE/+2 {*}
  # delete empty file
  find $DIR_TMP -size 0 -delete
  # delete cert chain pem
  rm tsReply_${TSA_names[$TSA_idx]}.pem

  # generate cert IDs
  openssl rehash ./
  # copy over root CAs, overwriting links to any extracted CA root with these root certs
  cp -a $DIR_CA/* $DIR_TMP

  cd $DIR_ORIGIN
  openssl ts -verify -digest $DIGEST_DATA \
      -in tsReply_${TSA_names[$TSA_idx]}.tsr \
      -CApath $DIR_TMP 2> >(grep -v "Using configuration from" >&2)

  rm -rf $DIR_TMP

done
